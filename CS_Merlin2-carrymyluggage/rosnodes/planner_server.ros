PackageSet {
    AmentPackage planner_server {
        Artifact planner_server {
            Node {
                name planner_server
                ServiceServers {
                    
                    ServiceServer {
                        name "is_path_valid" service "nav2_msgs.IsPathValid"
                    },
                    ServiceServer {
                        name "~/change_state" service "lifecycle_msgs.ChangeState"
                    },
                    ServiceServer {
                        name "~/get_available_states" service "lifecycle_msgs.GetAvailableStates"
                    },
                    ServiceServer {
                        name "~/get_available_transitions" service "lifecycle_msgs.GetAvailableTransitions"
                    },
                    ServiceServer {
                        name "~/get_state" service "lifecycle_msgs.GetState"
                    },
                    ServiceServer {
                        name "~/get_transition_graph" service "lifecycle_msgs.GetAvailableTransitions"
                    }}
                
                Publishers {
                    Publisher {
                        name "plan" message "nav_msgs.Path"
                    },
                    Publisher {
                        name "~/transition_event" message "lifecycle_msgs.TransitionEvent"
                    }}
                
                Subscribers {
                    
                    Subscriber {
                        name "bond" message "bond.Status"
                    }}
                
                ActionServers {
                    
                    ActionServer {
                        name "compute_path_through_poses" action "nav2_msgs.ComputePathThroughPoses"
                    },
                    ActionServer {
                        name "compute_path_to_pose" action "nav2_msgs.ComputePathToPose"
                    }}
                
                Parameters {
                    
                    Parameter {
                        name "bond_disable_heartbeat_timeout" type Boolean
                    },
                    Parameter {
                        name "GridBased.allow_unknown" type Boolean
                    },
                    Parameter {
                        name "GridBased.plugin" type String
                    },
                    Parameter {
                        name "GridBased.tolerance" type Double
                    },
                    Parameter {
                        name "GridBased.use_astar" type Boolean
                    },
                    Parameter {
                        name "GridBased.use_final_approach_orientation" type Boolean
                    },
                    Parameter {
                        name "expected_planner_frequency" type Double
                    },
                    Parameter {
                        name "planner_plugins" type Array {type String}
                    },
                    Parameter {
                        name "use_sim_time" type Boolean
                    }}
                }
        }
    }
}
